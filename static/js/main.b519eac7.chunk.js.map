{"version":3,"sources":["components/Step.tsx","getWorkerUrl.ts","pixelateImage.ts","readFileAsHtmlImage.ts","App.tsx","Option.ts","serviceWorker.js","index.js"],"names":["Step","_ref","number","instructions","children","react_default","a","createElement","className","getWorkerUrl","workerName","path","join","process","pixelateImage","img","pixelWidth","pixelHeight","Promise","resolve","reject","worker","Worker","imgBuffer","canvas","document","width","height","ctx","getContext","drawImage","getImageData","data","buffer","canvasImageSourceToBuffer","postMessage","type","imgWidth","imgHeight","addEventListener","e","terminate","ImageData","Uint8ClampedArray","error","console","log","message","TypeError","readFileAsHtmlImage","file","reader","FileReader","result","readAsDataURL","readFileAsDataUrl","then","url","src","Corner","Option","matcher","this","isNone","none","some","value","isNone_","mapper","_this","match","executor","map","expect","Error","defaultValue","defaultValueThunk","Object","create","prototype","NONE","options","values","i","length","option","isSome","push","App","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","originalCanvasRef","pixelatedCanvasRef","appContainerRef","window","pixelator","assertThisInitialized","state","originalImg","fileName","pixelWidthInputValue","DEFAULT_PIXEL_SIZE","pixelHeightInputValue","pixelationZone","pendingPixelationZone","shouldPreserveNonPixelatedPortion","dragState","isPixelationComplete","React","createRef","bindMethods","onFileChange","bind","onPixelWidthChange","onPixelHeightChange","syncPixelWidth","syncPixelHeight","onPixelateClick","onDownloadClick","onShouldUseEntireImageChange","onShouldPreserveNonPixelatedPortionChange","drawOrClearPixelationZone","onOriginalCanvasMouseDown","onOriginalCanvasTouchStart","onMouseMove","nativeOnTouchMove","onMouseUp","onTouchEnd","onPendingPixelationZoneXChange","onPendingPixelationZoneYChange","onPendingPixelationZoneWidthChange","onPendingPixelationZoneHeightChange","syncPendingPixelationZone","originalCanvas","current","pixelatedCanvas","passive","removeEventListener","_this2","ref","Step_Step","accept","onChange","_img","pattern","onBlur","checked","currentPixelationZone","unwrapOrElse","rectToPendingRect","Fragment","x","y","onMouseDown","onTouchStart","onClick","href","_this3","files","target","File","test","name","concat","setState","parsed","parseInt","isLegalPixelSize","_this4","ifSome","zone","rect","original","originalCtx","rectData","cropped","putImageData","cropImage","imgData","unwrap","dataUrl","toDataURL","download","lastIndexOf","slice","stripExtension","click","_this5","_this6","originalPixelsInPixelationZone","fillStyle","fillRect","lineWidth","strokeStyle","strokeRect","fillCircle","onOriginalCanvasPointerDown","clientX","clientY","touches","_this7","_this7$getOriginalCan","getOriginalCanvasCoords","_this7$getOriginalCan2","slicedToArray","canvasX","canvasY","getDraggedCorner","corner","initialZone","boundingRect","getBoundingClientRect","dx","left","dy","top","Math","round","preventDefault","onPointerMove","_this8","_this$state","all","_ref3","_ref4","_ref4$","_this8$getOriginalCan","_this8$getOriginalCan2","clampRect","updateCorner","onPointerUp","_this9","newX","objectSpread","_this10","newY","_this11","newWidth","_this12","newHeight","_this13","_this$state2","_ref5","_ref6","previousPixelationZone","pendingRectToRect","newPixelationZone","Component","size","isNaN","num","floor","handleRadius","euclideanDistance","TopLeft","TopRight","BottomLeft","BottomRight","x1","y1","x2","y2","hypot","r","beginPath","arc","PI","closePath","fill","right","bottom","_ref7","_ref8","max","min","pr","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","App_App","getElementById","URL","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b519eac7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Step.css\";\n\nexport default function Step({\n  number,\n  instructions,\n  children\n}: Props): React.ReactElement {\n  return (\n    <div className=\"Step\">\n      <div className=\"StepDescription\">\n        <span className=\"StepNumber\">Step {number}: </span>\n        <span className=\"StepInstructions\">{instructions}</span>\n      </div>\n\n      {children}\n    </div>\n  );\n}\n\ninterface Props {\n  number: number;\n  instructions?: string;\n  children: React.ReactNode;\n}\n","import path from \"path\";\n\nexport default function(workerName: string): string {\n  return path.join(\n    process.env.PUBLIC_URL,\n    \"workers\",\n    workerName + \".worker.js\"\n  );\n}\n","import getWorkerUrl from \"./getWorkerUrl\";\n\nexport default function pixelateImage(\n  img: CanvasImageSource & { width: number; height: number },\n  pixelWidth: number,\n  pixelHeight: number\n): Promise<ImageData> {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore\n    const worker = new Worker(getWorkerUrl(\"pixelator\"));\n    const imgBuffer = canvasImageSourceToBuffer(img);\n    worker.postMessage(\n      {\n        type: \"pixelate\",\n        pixelWidth,\n        pixelHeight,\n        imgWidth: img.width,\n        imgHeight: img.height,\n        imgBuffer\n      },\n      [imgBuffer]\n    );\n\n    worker.addEventListener(\"message\", (e: MessageEvent) => {\n      const { data } = e;\n\n      switch (data.type) {\n        case \"succeeded\":\n          worker.terminate();\n          resolve(\n            new ImageData(\n              new Uint8ClampedArray(data.imgBuffer),\n              data.imgWidth,\n              data.imgHeight\n            )\n          );\n          break;\n\n        case \"failed\":\n          worker.terminate();\n          reject(data.error);\n          break;\n\n        case \"log\":\n          console.log(data.message);\n          break;\n\n        default:\n          reject(new TypeError(\"Unexpected message type: \" + data.type));\n      }\n    });\n  });\n}\n\nfunction canvasImageSourceToBuffer(\n  img: CanvasImageSource & { width: number; height: number }\n): ArrayBuffer {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = img.width;\n  canvas.height = img.height;\n  const ctx = canvas.getContext(\"2d\")!;\n  ctx.drawImage(img, 0, 0);\n  return ctx.getImageData(0, 0, img.width, img.height).data.buffer;\n}\n","export default function readFileAsHtmlImage(\n  file: File\n): Promise<HTMLImageElement> {\n  return readFileAsDataUrl(file).then(\n    url =>\n      new Promise((resolve, reject) => {\n        const img = document.createElement(\"img\");\n        img.src = url;\n        img.addEventListener(\"load\", () => resolve(img));\n        img.addEventListener(\"error\", reject);\n      })\n  );\n}\n\nfunction readFileAsDataUrl(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => resolve(reader.result as string));\n    reader.addEventListener(\"error\", () => reject(reader.error));\n    reader.readAsDataURL(file);\n  });\n}\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Step from \"./components/Step\";\n\nimport pixelateImage from \"./pixelateImage\";\nimport readFileAsHtmlImage from \"./readFileAsHtmlImage\";\nimport Option from \"./Option\";\n\nconst PIXELATION_ZONE_LINE_WIDTH = 2;\nconst PIXELATION_ZONE_HANDLE_RADIUS = 10;\nconst PIXELATION_ZONE_COLOR = \"#08b\";\nconst NON_PRESERVED_INDICATOR_COLOR = \"#000a\";\n\nexport default class App extends React.Component<{}, State> {\n  private originalCanvasRef: React.RefObject<HTMLCanvasElement>;\n  private pixelatedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  private appContainerRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: {}) {\n    super(props);\n\n    // @ts-ignore\n    window.pixelator = this;\n\n    this.state = {\n      originalImg: Option.none(),\n      fileName: Option.none(),\n      pixelWidthInputValue: \"\" + DEFAULT_PIXEL_SIZE,\n      pixelHeightInputValue: \"\" + DEFAULT_PIXEL_SIZE,\n      pixelationZone: Option.none(),\n      pendingPixelationZone: Option.none(),\n      shouldPreserveNonPixelatedPortion: true,\n      dragState: Option.none(),\n      isPixelationComplete: false\n    };\n\n    this.originalCanvasRef = React.createRef();\n    this.pixelatedCanvasRef = React.createRef();\n    this.appContainerRef = React.createRef();\n\n    this.bindMethods();\n  }\n\n  private bindMethods() {\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onPixelWidthChange = this.onPixelWidthChange.bind(this);\n    this.onPixelHeightChange = this.onPixelHeightChange.bind(this);\n    this.syncPixelWidth = this.syncPixelWidth.bind(this);\n    this.syncPixelHeight = this.syncPixelHeight.bind(this);\n    this.onPixelateClick = this.onPixelateClick.bind(this);\n    this.onDownloadClick = this.onDownloadClick.bind(this);\n    this.onShouldUseEntireImageChange = this.onShouldUseEntireImageChange.bind(\n      this\n    );\n    this.onShouldPreserveNonPixelatedPortionChange = this.onShouldPreserveNonPixelatedPortionChange.bind(\n      this\n    );\n    this.drawOrClearPixelationZone = this.drawOrClearPixelationZone.bind(this);\n    this.onOriginalCanvasMouseDown = this.onOriginalCanvasMouseDown.bind(this);\n    this.onOriginalCanvasTouchStart = this.onOriginalCanvasTouchStart.bind(\n      this\n    );\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.nativeOnTouchMove = this.nativeOnTouchMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onPendingPixelationZoneXChange = this.onPendingPixelationZoneXChange.bind(\n      this\n    );\n    this.onPendingPixelationZoneYChange = this.onPendingPixelationZoneYChange.bind(\n      this\n    );\n    this.onPendingPixelationZoneWidthChange = this.onPendingPixelationZoneWidthChange.bind(\n      this\n    );\n    this.onPendingPixelationZoneHeightChange = this.onPendingPixelationZoneHeightChange.bind(\n      this\n    );\n    this.syncPendingPixelationZone = this.syncPendingPixelationZone.bind(this);\n  }\n\n  componentDidMount() {\n    const originalCanvas = this.originalCanvasRef.current!;\n    originalCanvas.width = 0;\n    originalCanvas.height = 0;\n\n    const pixelatedCanvas = this.pixelatedCanvasRef.current!;\n    pixelatedCanvas.width = 0;\n    pixelatedCanvas.height = 0;\n\n    const appContainer = this.appContainerRef.current!;\n    appContainer.addEventListener(\"touchmove\", this.nativeOnTouchMove, {\n      passive: false\n    });\n  }\n\n  componentWillUnmount() {\n    const appContainer = this.appContainerRef.current!;\n    appContainer.removeEventListener(\"touchmove\", this.nativeOnTouchMove);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        ref={this.appContainerRef}\n        onMouseMove={this.onMouseMove}\n        onMouseUp={this.onMouseUp}\n        onTouchEnd={this.onTouchEnd}\n      >\n        <header>\n          <h1>Pixelator</h1>\n          <p className=\"HeaderDescription\">\n            An online tool for pixelating your images.\n          </p>\n        </header>\n\n        <main>\n          <Step number={1}>\n            <label className=\"OrangeButton OrangeButton--inlineBlock\">\n              Upload an image\n              <input\n                type=\"file\"\n                accept=\".jpg,.jpeg,.png,.gif\"\n                onChange={this.onFileChange}\n                className=\"DisplayNone\"\n              />\n            </label>\n\n            {this.state.originalImg.match({\n              none: () => null,\n              some: _img => (\n                <div>\n                  <p className=\"SuccessfulUploadNotification\">\n                    Your image has been successfully uploaded!\n                  </p>\n                </div>\n              )\n            })}\n          </Step>\n\n          <Step number={2} instructions=\"Choose pixel size.\">\n            <div>\n              <label>\n                Width:{\" \"}\n                <input\n                  type=\"text\"\n                  pattern=\"\\d*\"\n                  value={this.state.pixelWidthInputValue}\n                  onChange={this.onPixelWidthChange}\n                  onBlur={this.syncPixelWidth}\n                />\n                px\n              </label>\n            </div>\n            <div>\n              <label>\n                Height:{\" \"}\n                <input\n                  type=\"text\"\n                  pattern=\"\\d*\"\n                  value={this.state.pixelHeightInputValue}\n                  onChange={this.onPixelHeightChange}\n                  onBlur={this.syncPixelHeight}\n                />\n                px\n              </label>\n            </div>\n          </Step>\n\n          <Step\n            number={3}\n            instructions=\"Choose the portion of the image to pixelate, or skip this step and the entire image will be pixelated.\"\n          >\n            <div className=\"PixelationZoneOptions\">\n              <div>\n                <label>\n                  Select all\n                  <input\n                    type=\"checkbox\"\n                    checked={this.state.pixelationZone.isNone()}\n                    onChange={this.onShouldUseEntireImageChange}\n                  />\n                </label>\n              </div>\n\n              {this.state.pixelationZone.match({\n                none: () => null,\n                some: currentPixelationZone => {\n                  const pendingPixelationZone = this.state.pendingPixelationZone.unwrapOrElse(\n                    () => rectToPendingRect(currentPixelationZone)\n                  );\n                  return (\n                    <>\n                      <div className=\"PixelationZoneCoordinates\">\n                        <div>\n                          <label>\n                            x:{\" \"}\n                            <input\n                              type=\"text\"\n                              value={pendingPixelationZone.x}\n                              onChange={this.onPendingPixelationZoneXChange}\n                              onBlur={this.syncPendingPixelationZone}\n                            />\n                          </label>\n                        </div>\n\n                        <div>\n                          <label>\n                            y:{\" \"}\n                            <input\n                              type=\"text\"\n                              value={pendingPixelationZone.y}\n                              onChange={this.onPendingPixelationZoneYChange}\n                              onBlur={this.syncPendingPixelationZone}\n                            />\n                          </label>\n                        </div>\n\n                        <div>\n                          {\" \"}\n                          <label>\n                            width:{\" \"}\n                            <input\n                              type=\"text\"\n                              value={pendingPixelationZone.width}\n                              onChange={this.onPendingPixelationZoneWidthChange}\n                              onBlur={this.syncPendingPixelationZone}\n                            />\n                          </label>\n                        </div>\n\n                        <div>\n                          <label>\n                            height:{\" \"}\n                            <input\n                              type=\"text\"\n                              value={pendingPixelationZone.height}\n                              onChange={\n                                this.onPendingPixelationZoneHeightChange\n                              }\n                              onBlur={this.syncPendingPixelationZone}\n                            />\n                          </label>\n                        </div>\n                      </div>\n\n                      <div>\n                        <label>\n                          Preserve non-pixelated portion of image\n                          <input\n                            type=\"checkbox\"\n                            checked={\n                              this.state.shouldPreserveNonPixelatedPortion\n                            }\n                            onChange={\n                              this.onShouldPreserveNonPixelatedPortionChange\n                            }\n                          />\n                        </label>\n                      </div>\n                    </>\n                  );\n                }\n              })}\n            </div>\n\n            <canvas\n              ref={this.originalCanvasRef}\n              onMouseDown={this.onOriginalCanvasMouseDown}\n              onTouchStart={this.onOriginalCanvasTouchStart}\n            />\n          </Step>\n\n          <Step number={4}>\n            <button onClick={this.onPixelateClick} className=\"OrangeButton\">\n              Pixelate it!\n            </button>\n            <canvas ref={this.pixelatedCanvasRef} />\n          </Step>\n\n          <Step number={5}>\n            <button onClick={this.onDownloadClick} className=\"OrangeButton\">\n              Download\n            </button>\n            <p>\n              Download (either click the above button or{\" \"}\n              <code className=\"DownloadInstructions\">\n                right-click -> Save Image As\n              </code>{\" \"}\n              the pixelated image).\n            </p>\n          </Step>\n\n          <footer>\n            Pixelator's source code can be found on{\" \"}\n            <a\n              href=\"https://github.com/kylejlin/pixelator\"\n              className=\"GitHubLink\"\n            >\n              GitHub\n            </a>{\" \"}\n            under the MIT License.\n          </footer>\n        </main>\n      </div>\n    );\n  }\n\n  onFileChange(e: React.ChangeEvent) {\n    const { files } = e.target as HTMLInputElement;\n    if (files !== null) {\n      const file = files[0];\n      if (file instanceof File && /\\.(jpe?g|png|gif)$/i.test(file.name)) {\n        readFileAsHtmlImage(file).then(img => {\n          const canvas = this.originalCanvasRef.current!;\n          canvas.width = img.width;\n          canvas.height = img.height;\n          const ctx = canvas.getContext(\"2d\")!;\n          ctx.drawImage(img, 0, 0);\n\n          this.setState({\n            originalImg: Option.some(img),\n            fileName: Option.some(file.name),\n            isPixelationComplete: false\n          });\n        });\n      } else {\n        throw new TypeError(\n          `Uploaded file format \"${file.name}\" is not supported.`\n        );\n      }\n    }\n  }\n\n  onPixelWidthChange(e: React.ChangeEvent) {\n    this.setState({\n      pixelWidthInputValue: (e.target as HTMLInputElement).value\n    });\n  }\n\n  onPixelHeightChange(e: React.ChangeEvent) {\n    this.setState({\n      pixelHeightInputValue: (e.target as HTMLInputElement).value\n    });\n  }\n\n  syncPixelWidth() {\n    this.setState({ pixelWidthInputValue: \"\" + this.pixelWidth() });\n  }\n\n  syncPixelHeight() {\n    this.setState({ pixelHeightInputValue: \"\" + this.pixelHeight() });\n  }\n\n  pixelWidth(): number {\n    const parsed = parseInt(this.state.pixelWidthInputValue, 10);\n    if (isLegalPixelSize(parsed)) {\n      return parsed;\n    } else {\n      return DEFAULT_PIXEL_SIZE;\n    }\n  }\n\n  pixelHeight(): number {\n    const parsed = parseInt(this.state.pixelHeightInputValue, 10);\n    if (isLegalPixelSize(parsed)) {\n      return parsed;\n    } else {\n      return DEFAULT_PIXEL_SIZE;\n    }\n  }\n\n  onPixelateClick() {\n    this.state.originalImg.ifSome(originalImg => {\n      const imgToPixelate = this.state.pixelationZone.match({\n        none: () => originalImg,\n        some: zone => cropImage(originalImg, zone)\n      });\n      pixelateImage(imgToPixelate, this.pixelWidth(), this.pixelHeight()).then(\n        imgData => {\n          const canvas = this.pixelatedCanvasRef.current;\n          if (canvas !== null) {\n            const ctx = canvas.getContext(\"2d\")!;\n\n            if (\n              this.state.pixelationZone.isSome() &&\n              this.state.shouldPreserveNonPixelatedPortion\n            ) {\n              const zone = this.state.pixelationZone.unwrap();\n              canvas.width = originalImg.width;\n              canvas.height = originalImg.height;\n              ctx.drawImage(originalImg, 0, 0);\n              ctx.putImageData(imgData, zone.x, zone.y);\n            } else {\n              canvas.width = imgData.width;\n              canvas.height = imgData.height;\n              ctx.putImageData(imgData, 0, 0);\n            }\n            this.setState({ isPixelationComplete: true });\n          }\n        }\n      );\n    });\n  }\n\n  onDownloadClick() {\n    const canvas = this.pixelatedCanvasRef.current;\n    if (this.state.isPixelationComplete && canvas !== null) {\n      this.state.fileName.ifSome(fileName => {\n        const dataUrl = canvas.toDataURL(\"image/png\", 1.0);\n        const a = document.createElement(\"a\");\n        a.href = dataUrl;\n        a.download = stripExtension(fileName) + \".pixelated.png\";\n        a.click();\n      });\n    }\n  }\n\n  onShouldUseEntireImageChange(e: React.ChangeEvent) {\n    const { checked } = e.target as HTMLInputElement;\n\n    if (checked) {\n      this.setState(\n        { pixelationZone: Option.none() },\n        this.drawOrClearPixelationZone\n      );\n    } else {\n      this.state.originalImg.ifSome(img => {\n        this.setState(\n          {\n            pixelationZone: Option.some({\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height\n            })\n          },\n          this.drawOrClearPixelationZone\n        );\n      });\n    }\n  }\n\n  drawOrClearPixelationZone() {\n    const canvas = this.originalCanvasRef.current;\n    if (canvas !== null) {\n      this.state.originalImg.ifSome(img => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const ctx = canvas.getContext(\"2d\")!;\n        ctx.drawImage(img, 0, 0);\n        this.state.pixelationZone.ifSome(zone => {\n          if (!this.state.shouldPreserveNonPixelatedPortion) {\n            const originalPixelsInPixelationZone = ctx.getImageData(\n              zone.x,\n              zone.y,\n              zone.width,\n              zone.height\n            );\n\n            ctx.fillStyle = NON_PRESERVED_INDICATOR_COLOR;\n            ctx.fillRect(0, 0, img.width, img.height);\n\n            ctx.putImageData(originalPixelsInPixelationZone, zone.x, zone.y);\n          }\n\n          ctx.lineWidth = PIXELATION_ZONE_LINE_WIDTH;\n          ctx.strokeStyle = PIXELATION_ZONE_COLOR;\n          ctx.strokeRect(zone.x, zone.y, zone.width, zone.height);\n\n          ctx.fillStyle = PIXELATION_ZONE_COLOR;\n          fillCircle(ctx, zone.x, zone.y, PIXELATION_ZONE_HANDLE_RADIUS);\n          fillCircle(\n            ctx,\n            zone.x + zone.width,\n            zone.y,\n            PIXELATION_ZONE_HANDLE_RADIUS\n          );\n          fillCircle(\n            ctx,\n            zone.x,\n            zone.y + zone.height,\n            PIXELATION_ZONE_HANDLE_RADIUS\n          );\n          fillCircle(\n            ctx,\n            zone.x + zone.width,\n            zone.y + zone.height,\n            PIXELATION_ZONE_HANDLE_RADIUS\n          );\n        });\n      });\n    }\n  }\n\n  onShouldPreserveNonPixelatedPortionChange(e: React.ChangeEvent) {\n    const target = e.target as HTMLInputElement;\n    this.setState(\n      { shouldPreserveNonPixelatedPortion: target.checked },\n      this.drawOrClearPixelationZone\n    );\n  }\n\n  onOriginalCanvasMouseDown(e: React.MouseEvent) {\n    this.onOriginalCanvasPointerDown(e.clientX, e.clientY);\n  }\n\n  onOriginalCanvasTouchStart(e: React.TouchEvent) {\n    this.onOriginalCanvasPointerDown(\n      e.touches[0].clientX,\n      e.touches[0].clientY\n    );\n  }\n\n  onOriginalCanvasPointerDown(x: number, y: number) {\n    this.state.pixelationZone.ifSome(zone => {\n      const [canvasX, canvasY] = this.getOriginalCanvasCoords(x, y);\n\n      this.setState({\n        dragState: getDraggedCorner(\n          canvasX,\n          canvasY,\n          zone,\n          PIXELATION_ZONE_HANDLE_RADIUS\n        ).map(corner => ({ corner, initialZone: zone }))\n      });\n    });\n  }\n\n  getOriginalCanvasCoords(clientX: number, clientY: number): [number, number] {\n    const canvas = this.originalCanvasRef.current;\n    if (canvas !== null) {\n      const boundingRect = canvas.getBoundingClientRect();\n      const dx = clientX - boundingRect.left;\n      const dy = clientY - boundingRect.top;\n      const canvasX = Math.round((canvas.width * dx) / boundingRect.width);\n      const canvasY = Math.round((canvas.height * dy) / boundingRect.height);\n      return [canvasX, canvasY];\n    } else {\n      throw new TypeError(\n        \"getOriginalCanvasCoords() was called when originalCanvasRef was null\"\n      );\n    }\n  }\n\n  onMouseMove(e: React.MouseEvent) {\n    e.preventDefault();\n    this.onPointerMove(e.clientX, e.clientY);\n  }\n\n  nativeOnTouchMove(e: TouchEvent) {\n    if (this.state.dragState.isSome()) {\n      e.preventDefault();\n    }\n\n    this.onPointerMove(e.touches[0].clientX, e.touches[0].clientY);\n  }\n\n  onPointerMove(x: number, y: number) {\n    const { originalImg, dragState } = this.state;\n    Option.all([originalImg, dragState]).ifSome(\n      ([originalImg, { corner, initialZone }]) => {\n        const [canvasX, canvasY] = this.getOriginalCanvasCoords(x, y);\n\n        this.setState(\n          {\n            pixelationZone: Option.some(\n              clampRect(\n                updateCorner(initialZone, corner, canvasX, canvasY),\n                originalImg.width,\n                originalImg.height\n              )\n            )\n          },\n          this.drawOrClearPixelationZone\n        );\n      }\n    );\n  }\n\n  onMouseUp() {\n    this.onPointerUp();\n  }\n\n  onTouchEnd() {\n    this.onPointerUp();\n  }\n\n  onPointerUp() {\n    this.setState({\n      dragState: Option.none()\n    });\n  }\n\n  onPendingPixelationZoneXChange(e: React.ChangeEvent) {\n    this.state.pixelationZone.ifSome(pixelationZone => {\n      const newX = (e.target as HTMLInputElement).value;\n      const original = this.state.pendingPixelationZone.unwrapOrElse(() =>\n        rectToPendingRect(pixelationZone)\n      );\n      this.setState({\n        pendingPixelationZone: Option.some({ ...original, x: newX })\n      });\n    });\n  }\n\n  onPendingPixelationZoneYChange(e: React.ChangeEvent) {\n    this.state.pixelationZone.ifSome(pixelationZone => {\n      const newY = (e.target as HTMLInputElement).value;\n      const original = this.state.pendingPixelationZone.unwrapOrElse(() =>\n        rectToPendingRect(pixelationZone)\n      );\n      this.setState({\n        pendingPixelationZone: Option.some({ ...original, y: newY })\n      });\n    });\n  }\n\n  onPendingPixelationZoneWidthChange(e: React.ChangeEvent) {\n    this.state.pixelationZone.ifSome(pixelationZone => {\n      const newWidth = (e.target as HTMLInputElement).value;\n      const original = this.state.pendingPixelationZone.unwrapOrElse(() =>\n        rectToPendingRect(pixelationZone)\n      );\n      this.setState({\n        pendingPixelationZone: Option.some({ ...original, width: newWidth })\n      });\n    });\n  }\n\n  onPendingPixelationZoneHeightChange(e: React.ChangeEvent) {\n    this.state.pixelationZone.ifSome(pixelationZone => {\n      const newHeight = (e.target as HTMLInputElement).value;\n      const original = this.state.pendingPixelationZone.unwrapOrElse(() =>\n        rectToPendingRect(pixelationZone)\n      );\n      this.setState({\n        pendingPixelationZone: Option.some({\n          ...original,\n          height: newHeight\n        })\n      });\n    });\n  }\n\n  syncPendingPixelationZone() {\n    const { originalImg, pixelationZone, pendingPixelationZone } = this.state;\n    Option.all([originalImg, pixelationZone, pendingPixelationZone]).ifSome(\n      ([originalImg, previousPixelationZone, pendingPixelationZone]) => {\n        this.setState(\n          {\n            pixelationZone: Option.some(\n              pendingRectToRect(pendingPixelationZone).match({\n                none: () => previousPixelationZone,\n                some: newPixelationZone =>\n                  clampRect(\n                    newPixelationZone,\n                    originalImg.width,\n                    originalImg.height\n                  )\n              })\n            ),\n            pendingPixelationZone: Option.none()\n          },\n          this.drawOrClearPixelationZone\n        );\n      }\n    );\n  }\n}\n\ninterface State {\n  originalImg: Option<HTMLImageElement>;\n  fileName: Option<string>;\n  pixelWidthInputValue: string;\n  pixelHeightInputValue: string;\n  pixelationZone: Option<Rect>;\n  pendingPixelationZone: Option<PendingRect>;\n  shouldPreserveNonPixelatedPortion: boolean;\n  dragState: Option<{ corner: Corner; initialZone: Rect }>;\n  isPixelationComplete: boolean;\n}\n\ninterface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface PendingRect {\n  x: string;\n  y: string;\n  width: string;\n  height: string;\n}\n\nenum Corner {\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight\n}\n\nconst DEFAULT_PIXEL_SIZE = 10;\n\nfunction isLegalPixelSize(size: number): boolean {\n  return !isNaN(size) && size > 0 && isInt(size);\n}\n\nfunction isInt(num: number): boolean {\n  return Math.floor(num) === num;\n}\n\nfunction getDraggedCorner(\n  x: number,\n  y: number,\n  rect: Rect,\n  handleRadius: number\n): Option<Corner> {\n  if (euclideanDistance(x, y, rect.x, rect.y) <= handleRadius) {\n    return Option.some(Corner.TopLeft);\n  } else if (\n    euclideanDistance(x, y, rect.x + rect.width, rect.y) <= handleRadius\n  ) {\n    return Option.some(Corner.TopRight);\n  } else if (\n    euclideanDistance(x, y, rect.x, rect.y + rect.height) <= handleRadius\n  ) {\n    return Option.some(Corner.BottomLeft);\n  } else if (\n    euclideanDistance(x, y, rect.x + rect.width, rect.y + rect.height) <=\n    handleRadius\n  ) {\n    return Option.some(Corner.BottomRight);\n  } else {\n    return Option.none();\n  }\n}\n\nfunction euclideanDistance(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return Math.hypot(x1 - x2, y1 - y2);\n}\n\nfunction fillCircle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  r: number\n) {\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.closePath();\n  ctx.fill();\n}\n\nfunction updateCorner(rect: Rect, corner: Corner, x: number, y: number): Rect {\n  let left = rect.x;\n  let right = rect.x + rect.width;\n  let top = rect.y;\n  let bottom = rect.y + rect.height;\n\n  switch (corner) {\n    case Corner.TopLeft:\n      top = y;\n      left = x;\n      break;\n    case Corner.TopRight:\n      top = y;\n      right = x;\n      break;\n    case Corner.BottomLeft:\n      bottom = y;\n      left = x;\n      break;\n    case Corner.BottomRight:\n      bottom = y;\n      right = x;\n      break;\n  }\n\n  if (left > right) {\n    [left, right] = [right, left];\n  }\n  if (top > bottom) {\n    [top, bottom] = [bottom, top];\n  }\n\n  return {\n    x: left,\n    y: top,\n    width: right - left,\n    height: bottom - top\n  };\n}\n\nfunction cropImage(\n  img: CanvasImageSource & { width: number; height: number },\n  rect: Rect\n): HTMLCanvasElement {\n  const original = document.createElement(\"canvas\");\n  original.width = img.width;\n  original.height = img.height;\n  const originalCtx = original.getContext(\"2d\")!;\n  originalCtx.drawImage(img, 0, 0);\n  const rectData = originalCtx.getImageData(\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height\n  );\n\n  const cropped = document.createElement(\"canvas\");\n  cropped.width = rect.width;\n  cropped.height = rect.height;\n  const croppedCtx = cropped.getContext(\"2d\")!;\n  croppedCtx.putImageData(rectData, 0, 0);\n  return cropped;\n}\n\nfunction clampRect(rect: Rect, width: number, height: number): Rect {\n  const x = Math.max(rect.x, 0);\n  const y = Math.max(rect.y, 0);\n  return {\n    x,\n    y,\n    width: Math.min(rect.width, width - x),\n    height: Math.min(rect.height, height - y)\n  };\n}\n\nfunction stripExtension(fileName: string) {\n  const i = fileName.lastIndexOf(\".\");\n  if (i === -1) {\n    return fileName;\n  } else {\n    return fileName.slice(0, i);\n  }\n}\n\nfunction rectToPendingRect(rect: Rect): PendingRect {\n  const { x, y, width, height } = rect;\n  return { x: \"\" + x, y: \"\" + y, width: \"\" + width, height: \"\" + height };\n}\n\nfunction pendingRectToRect(pr: PendingRect): Option<Rect> {\n  const x = parseInt(pr.x, 10);\n  const y = parseInt(pr.y, 10);\n  const width = parseInt(pr.width, 10);\n  const height = parseInt(pr.height, 10);\n  if (x >= 0 && y >= 0 && width > 0 && height > 0) {\n    return Option.some({ x, y, width, height });\n  } else {\n    return Option.none();\n  }\n}\n","export default class Option<T> {\n  static some<T>(value: T): Option<T> {\n    const some = Object.create(Option.prototype);\n    some.isNone_ = false;\n    some.value = value;\n    return some;\n  }\n\n  static none<T>(): Option<T> {\n    return NONE;\n  }\n\n  static all<T>(options: Option<T>[]): Option<T[]>;\n  static all<A, B>(options: [Option<A>, Option<B>]): Option<[A, B]>;\n  static all<A, B, C>(\n    options: [Option<A>, Option<B>, Option<C>]\n  ): Option<[A, B, C]>;\n  static all<A, B, C, D>(\n    options: [Option<A>, Option<B>, Option<C>, Option<D>]\n  ): Option<[A, B, C, D]>;\n  static all<A, B, C, D, E>(\n    options: [Option<A>, Option<B>, Option<C>, Option<D>, Option<E>]\n  ): Option<[A, B, C, D, E]>;\n  static all<A, B, C, D, E, F>(\n    options: [Option<A>, Option<B>, Option<C>, Option<D>, Option<E>, Option<F>]\n  ): Option<[A, B, C, D, E, F]>;\n  static all<A, B, C, D, E, F, G>(\n    options: [\n      Option<A>,\n      Option<B>,\n      Option<C>,\n      Option<D>,\n      Option<E>,\n      Option<F>,\n      Option<G>\n    ]\n  ): Option<[A, B, C, D, E, F, G]>;\n  static all<A, B, C, D, E, F, G, H>(\n    options: [\n      Option<A>,\n      Option<B>,\n      Option<C>,\n      Option<D>,\n      Option<E>,\n      Option<F>,\n      Option<G>,\n      Option<H>\n    ]\n  ): Option<[A, B, C, D, E, F, G, H]>;\n\n  static all<T>(options: Option<T>[]): Option<T[]> {\n    let values = [];\n    for (let i = 0; i < options.length; i++) {\n      const option = options[i];\n      if (option.isSome()) {\n        values.push((option as any).value);\n      } else {\n        return Option.none();\n      }\n    }\n    return Option.some(values);\n  }\n\n  match<N, S>(matcher: { none: () => N; some: (value: T) => S }): N | S {\n    if (this.isNone()) {\n      return matcher.none();\n    } else {\n      return matcher.some((this as any).value);\n    }\n  }\n\n  isNone() {\n    return (this as any).isNone_;\n  }\n\n  isSome() {\n    return !this.isNone();\n  }\n\n  map<R>(mapper: (value: T) => R): Option<R> {\n    return this.match({\n      none: () => (this as unknown) as Option<R>,\n      some: value => Option.some(mapper(value))\n    });\n  }\n\n  ifSome(executor: (value: T) => void): void {\n    this.map(executor);\n  }\n\n  unwrap(): T {\n    return this.expect(\"Tried to call unwrap() on Option::None\");\n  }\n\n  expect(message: string | Error): T {\n    return this.match({\n      none: () => {\n        const error =\n          \"string\" === typeof message ? new Error(message) : message;\n        throw error;\n      },\n      some: value => value\n    });\n  }\n\n  unwrapOr<D>(defaultValue: D): T | D {\n    return this.match({\n      none: () => defaultValue,\n      some: value => value\n    });\n  }\n\n  unwrapOrElse<D>(defaultValueThunk: () => D): T | D {\n    return this.match({\n      none: () => defaultValueThunk(),\n      some: value => value\n    });\n  }\n}\n\nconst NONE = (() => {\n  const none = Object.create(Option.prototype);\n  none.isNone_ = true;\n  return none;\n})();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}